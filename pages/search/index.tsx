import { ProductApi } from "@/api";
import { ProductCard } from "@/components";
import { DefaultLayout } from "@/layouts";
import { ProductModel, ResponseGetAllModel } from "@/models";
import { ResponseItems } from "@/utils/types";
import { Container, Grid, Pagination } from "@mui/material";
import Head from "next/head";
import { useRouter } from "next/router";

type Props = {
  productData: ResponseItems<ProductModel>;
};

const pApi = new ProductApi();
const Page = ({ productData: { items, count } }: Props) => {
  const router = useRouter();
  const { q } = router.query;
  const productData = new ResponseGetAllModel<ProductModel>(
    pApi.getListFromJson(items),
    count
  );
  return (
    <DefaultLayout>
      <>
        <Head>
          <title>Kết quả tìm kiếm</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Container maxWidth="lg">
          <h1 style={{ marginBottom: "12px" }}>Kết quả tìm kiếm "{q || ""}"</h1>
          <Grid container columnSpacing={2} rowSpacing={2}>
            {productData.items.map((product) => {
              return (
                <Grid item xs={12} sm={6} md={4} lg={3} key={product.id}>
                  <ProductCard product={product} />
                </Grid>
              );
            })}
            {productData.count > 0 ? (
              <Grid item xs={12}>
                <Pagination
                  count={Math.ceil(productData.count / 12)}
                  sx={{ ul: { justifyContent: "center" } }}
                  variant="outlined"
                  shape="rounded"
                  showLastButton
                  showFirstButton
                  page={router.query.p ? +router.query.p : 1}
                />
              </Grid>
            ) : (
              <Grid item xs={12}>
                Không tìm thấy sản phẩm
              </Grid>
            )}
          </Grid>
        </Container>
      </>
    </DefaultLayout>
  );
};

export async function getServerSideProps(context: any) {
  const { q } = context.query;
  const data = await pApi.getAll({
    q,
    limit: 12,
  });

  return {
    props: {
      productData: JSON.parse(JSON.stringify(data)),
    },
  };
}

export default Page;
