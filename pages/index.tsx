import { Container, Grid, Box } from "@mui/material";
import Head from "next/head";
import Link from "next/link";
import { getAllProducts } from "../apis/product";
import { ProductCard } from "../components";
import { DefaultLayout } from "../layouts";
import styles from "../styles/Home.module.css";
import { Advertisement, Blog, Product, ResponseItems } from "../utils/types";
import Image from "next/image";
import { Swiper, SwiperSlide } from "swiper/react";
import { getAllBlogs } from "../apis/blog";
import { GetServerSidePropsContext } from "next";
import { COOKIE_ACCESSTOKEN_NAME } from "../utils/constants";
import { formatDateTime } from "../utils/helpers";
import { getAllAdvertisements } from "../apis/advertisement";
type ProductsProps = {
  products?: Product[];
};
const Products = (props: ProductsProps) => {
  return (
    <Container maxWidth="lg">
      <Grid container columnSpacing={2} rowSpacing={2}>
        {props.products?.map((product) => {
          return (
            <Grid item xs={12} sm={6} md={4} lg={3} key={Math.random() + ""}>
              <ProductCard product={product} />
            </Grid>
          );
        })}
        <Grid item xs={12} className={styles.viewAllWrapper}>
          <Link href="/product" className={styles.viewAll}>
            Xem tất cả sản phẩm
          </Link>
        </Grid>
      </Grid>
    </Container>
  );
};

type BannersProps = {
  banners?: Advertisement[];
};

const Banners = (props: BannersProps) => {
  return props.banners ? (
    <Swiper slidesPerView={1}>
      {props.banners.map((adv: Advertisement) => {
        return (
          <SwiperSlide key={adv.id}>
            <Link href={adv.href} rel="preloaded">
              <Box
                sx={{ width: "100vw", position: "relative", height: "560px" }}
              >
                <Image
                  src={adv.path}
                  alt="banner"
                  priority={true}
                  // height={560}
                  // width={1952}
                  fill={true}
                  sizes="(min-width: 0) 100vw"
                />
              </Box>
            </Link>
          </SwiperSlide>
        );
      })}
    </Swiper>
  ) : null;
};

type BlogProps = {
  blogs: Blog[];
};

const Blogs = (props: BlogProps) => {
  return (
    <Container maxWidth="lg">
      <Grid container columnSpacing={2} rowSpacing={2}>
        {props.blogs.map((blog: Blog) => {
          return (
            <Grid item xs={12} md={4} key={blog.id}>
              <Link
                href={`/blog/${blog.slug}`}
                className={styles.blogThumbnail}
              >
                <Image
                  fill={true}
                  sizes="(max-width: 768px) 1vw"
                  src={blog.thumbnail}
                  alt=""
                  priority={true}
                />
              </Link>
              <Link href={`/blog/${blog.slug}`} className={styles.blogTitle}>
                {blog.title}
              </Link>
              <div className={styles.blogCreatedAt}>
                {formatDateTime(blog.createdAt)}
              </div>
            </Grid>
          );
        })}
        <Grid item xs={12} className={styles.viewAllWrapper}>
          <Link href="/blog" className={styles.viewAll}>
            Xem tất cả bài viết
          </Link>
        </Grid>
      </Grid>
    </Container>
  );
};

type Props = {
  productData: ResponseItems<Product>;
  blogData: ResponseItems<Blog>;
  advertisements: Advertisement[];
};
export default function Home({ productData, blogData, advertisements }: Props) {
  return (
    <DefaultLayout>
      <>
        <Head>
          <title>Trang chủ</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <Banners banners={advertisements} />

          <h1 className={styles.h1}>Sản phẩm mới</h1>
          <Products products={productData.items} />
          <h1 className={styles.h1}>Bài viết</h1>
          <Blogs blogs={blogData.items} />
        </main>
      </>
    </DefaultLayout>
  );
}
export async function getServerSideProps(context: GetServerSidePropsContext) {
  try {
    const [{ data: productData }, { data: blogData }, { data: advData }] =
      await Promise.all([
        getAllProducts({
          limit: 24,
          product_variants: true,
          images: true,
        }),
        getAllBlogs(
          {
            limit: 3,
          },
          context.req.cookies[COOKIE_ACCESSTOKEN_NAME]
        ),
        getAllAdvertisements({ page: "Trang chủ", sortType: "asc" }),
      ]);
    return {
      props: {
        productData,
        blogData,
        advertisements: advData.items,
      },
    };
  } catch (error) {
    return {
      props: {
        productData: { items: [], count: 0, totalPages: 0 },
        blogData: { items: [], count: 0, totalPages: 0 },
        advertisements: [],
      },
    };
  }
}
