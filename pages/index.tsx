import {
  AdvertisementApi,
  BlogApi,
  GroupProductHeaderApi,
  ProductApi,
} from "@/api";
import { Home } from "@/components";
import { DefaultLayout } from "@/layouts";
import { getProfileProps } from "@/lib";
import {
  AdvertisementModel,
  BlogModel,
  GroupProductHeaderModel,
  ProductModel,
  UserModel,
} from "@/models";
import {
  AdvertisementJson,
  BlogJson,
  GroupProductHeaderJson,
  ProductJson,
  UserJson,
} from "@/types/json";
import { GetServerSidePropsContext, NextPage } from "next";
import Head from "next/head";

type Props = {
  products: ProductJson[];
  blogs: BlogJson[];
  advertisements: AdvertisementJson[];
  groupProductHeaders: GroupProductHeaderJson[];
  profile: UserJson | null;
};
const Page: NextPage<Props> = ({
  products,
  blogs,
  advertisements,
  groupProductHeaders,
  profile,
}) => {
  return (
    <DefaultLayout
      contentStyle={{ marginBlock: 0, marginBottom: 16 }}
      profile={new UserModel(profile)}
    >
      <Head>
        <title>Trang chủ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Home
        advertisements={advertisements.map(
          (item) => new AdvertisementModel(item)
        )}
        groupProductHeaders={groupProductHeaders.map(
          (item) => new GroupProductHeaderModel(item)
        )}
        products={products.map((item) => new ProductModel(item))}
        blogs={blogs.map((item) => new BlogModel(item))}
      />
    </DefaultLayout>
  );
};
export default Page;

export const getServerSideProps = async (
  context: GetServerSidePropsContext
) => {
  let products: ProductJson[] = [];
  let blogs: BlogJson[] = [];
  let advertisements: AdvertisementJson[] = [];
  let groupProductHeaders: GroupProductHeaderJson[] = [];
  const gphApi = new GroupProductHeaderApi();
  const pApi = new ProductApi();
  const bApi = new BlogApi();
  const advApi = new AdvertisementApi();
  const { props } = await getProfileProps(context);
  try {
    const [res1, res2, res3, res4] = await Promise.allSettled([
      pApi.getAllJson({
        limit: 24,
        product_variants: true,
        images: true,
      }),
      bApi.getAllJson({
        limit: 3,
      }),
      advApi.getAllJson({ page: "Trang chủ", sortType: "ASC" }),
      gphApi.getAllJson(),
    ]);

    if (res1.status === "fulfilled") {
      products = res1.value.items;
    }
    if (res2.status === "fulfilled") {
      blogs = res2.value.items;
    }
    if (res3.status === "fulfilled") {
      advertisements = res3.value.items;
    }
    if (res4.status === "fulfilled") {
      groupProductHeaders = res4.value;
    }
  } catch (error) {
    console.log(error);
  }
  return {
    props: {
      ...props,
      products,
      blogs,
      advertisements,
      groupProductHeaders,
    },
  };
};
