import { BlogApi } from "@/api";
import { BlogContent, ImageFill } from "@/components";
import { DefaultLayout } from "@/layouts";
import { getProfileProps } from "@/lib";
import { BlogModel, UserModel } from "@/models";
import { BlogJson, UserJson } from "@/types/json";
import { Box, Container, Grid } from "@mui/material";
import { GetServerSidePropsContext } from "next";
import Head from "next/head";

type Props = {
  blog: BlogJson | null;
  relatedBlogs: BlogJson[];
  profile: UserJson | null;
};

const bApi = new BlogApi();
const BlogBySlug = ({
  blog: _blog,
  relatedBlogs: _relatedBlogs,
  profile,
}: Props) => {
  const blog = new BlogModel(_blog);
  const relatedBlogs = bApi.getListFromJson(_relatedBlogs);

  const hasRelated = relatedBlogs.length > 0;

  return (
    <DefaultLayout profile={new UserModel(profile)}>
      <>
        <Head>
          <title>{blog.id > 0 ? blog.title : "Bài viết"}</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main>
          <Container maxWidth="lg">
            <Grid container columnSpacing={2} rowSpacing={2}>
              <Grid item xs={12} lg={hasRelated ? 8 : 12}>
                <BlogContent blog={blog} />
              </Grid>
              {hasRelated ? (
                <Grid item xs={4}>
                  <Box
                    p={2}
                    sx={{
                      background: "linear-gradient(45deg, #f2f3f4, #353ef9)",
                    }}
                    mb={2}
                  >
                    Bài viết liên quan
                  </Box>

                  {relatedBlogs.map((blog, index) => {
                    return (
                      <Box
                        key={blog.id}
                        display="flex"
                        gap="12px"
                        mt={index === 0 ? 0 : 2}
                      >
                        <Box width="40%">
                          <ImageFill src={blog.thumbnail} height="66.7%" />
                        </Box>
                        <Box width="60%">
                          <h4 className="three-dot three-dot-2">
                            {blog.title}
                          </h4>
                          <span
                            className="three-dot three-dot-3"
                            style={{
                              fontSize: 14,
                              color: "gray",
                              marginTop: "4px",
                            }}
                          >
                            {blog.heading}
                          </span>
                        </Box>
                      </Box>
                    );
                  })}
                </Grid>
              ) : null}
            </Grid>
          </Container>
        </main>
      </>
    </DefaultLayout>
  );
};

export async function getServerSideProps(context: GetServerSidePropsContext) {
  try {
    const { slug } = context.query;
    const RELATED_BLOGS_LIMIT = 3;
    let blog: BlogJson | null = null;
    let relatedBlogs: BlogJson[] = [];
    const data = await bApi.getAllJson({
      slug: `${slug}`,
    });
    if (data.items.length > 0) blog = data.items[0];
    if (blog) {
      const data2 = await bApi.getAllJson({
        blogCategoryId: blog.blogCategoryId,
        limit: RELATED_BLOGS_LIMIT,
      });
      if (data2.items.length > 1) {
        relatedBlogs = data2.items.filter(
          (item) => blog && item.id !== blog.id
        );
      }
    }
    const { props } = await getProfileProps(context);
    return {
      props: {
        ...props,
        blog,
        relatedBlogs,
      },
    };
  } catch (error) {
    return {
      notFound: true,
    };
  }
}

export default BlogBySlug;
