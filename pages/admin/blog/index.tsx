import { ButtonControl, DataManagement, DataTable } from "@/components";
import { AdminLayout } from "@/layouts";
import { BlogModel } from "@/models";
import { blogActions, blogSelector } from "@/redux/slice/blogSlice";
import { confirmDialogActions } from "@/redux/slice/confirmDialogSlice";
import { useAppDispatch } from "@/redux/store";
import helper from "@/utils/helpers";
import { protectedRoutes } from "@/utils/routes";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect } from "react";
import { useSelector } from "react-redux";

type Props = {};
const LIMIT = 10;
const Page = (props: Props) => {
  const appDispatch = useAppDispatch();
  const { blogData } = useSelector(blogSelector);
  const router = useRouter();

  useEffect(() => {
    const { p, sortBy, sortType, limit } = router.query;
    appDispatch(
      blogActions.fetchGetAll({
        p: +`${p}` || 1,
        limit: limit ? `${limit}` : LIMIT,
        sortBy: `${sortBy || "id"}`,
        sortType: `${sortType}` === "asc" ? "asc" : "desc",
      })
    );
  }, [router.query]);

  return (
    <AdminLayout pageTitle="Bài viết">
      <>
        <Head>
          <title>Quản lý bài viết</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <DataManagement
          paperTitle="Danh sách bài viết"
          count={blogData.count}
          limit={LIMIT}
        >
          <DataTable
            sortable={["id", "title", "createdAt", "slug"]}
            columns={[
              {
                style: { width: 70, textAlign: "center" },
                display: "ID",
                key: "id",
              },
              {
                style: { textAlign: "center", width: 220 },
                key: "thumbnail",
                display: "Ảnh đại diện",
                render: (row: BlogModel) => (
                  <Image
                    width={220}
                    height={140}
                    src={row.thumbnail}
                    alt=""
                    priority={true}
                  />
                ),
              },
              {
                style: { textAlign: "left" },
                key: "title",
                display: "Tiêu đề",
              },
              {
                style: { textAlign: "left" },
                key: "slug",
                display: "Bí danh",
              },
              {
                style: { width: 120, textAlign: "center" },
                key: "createdAt",
                display: "Ngày tạo",
                render: (row: BlogModel) =>
                  helper.formatDateTime(row.createdAt),
              },
              {
                style: { width: 152 },
                key: "actions",
                render: (row: BlogModel) => (
                  <>
                    <div
                      className="flex-center"
                      style={{
                        flexWrap: "wrap",
                        gap: "8px",
                      }}
                    >
                      <Link href={protectedRoutes.previewBlog(row.id)}>
                        <ButtonControl color="info" size="small">
                          Xem trước
                        </ButtonControl>
                      </Link>
                      <Link href={protectedRoutes.updateBlog(row.id)}>
                        <ButtonControl color="secondary" size="small">
                          Sửa
                        </ButtonControl>
                      </Link>
                      <ButtonControl
                        color="error"
                        onClick={() =>
                          appDispatch(
                            confirmDialogActions.show({
                              onConfirm: () => {
                                appDispatch(
                                  blogActions.fetchSoftDeleteSingle(row.id)
                                );
                              },
                            })
                          )
                        }
                        size="small"
                      >
                        Xóa
                      </ButtonControl>
                    </div>
                  </>
                ),
              },
            ]}
            rows={blogData.items}
            hasCheck={true}
          />
        </DataManagement>
      </>
    </AdminLayout>
  );
};

export default Page;
