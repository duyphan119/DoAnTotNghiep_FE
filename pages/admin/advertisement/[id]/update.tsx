import { Button, Grid, Paper } from "@mui/material";
import Head from "next/head";
import { ChangeEvent, useState } from "react";
import { SubmitHandler, useForm } from "react-hook-form";
import {
  CreateAdvertisementDTO,
  updateAdvertisement,
} from "../../../../apis/advertisement";
import { AdminLayout } from "../../../../layouts";

import { useRouter } from "next/router";
import { uploadSingle } from "../../../../apis/upload";
import { useSnackbarContext } from "../../../../context/SnackbarContext";
import { MSG_SUCCESS } from "../../../../utils/constants";
import { Advertisement } from "../../../../utils/types";
import { getAdvertisementById } from "../../../../apis/advertisement";
import {
  AdminFormPaper,
  FooterForm,
  InputControl,
} from "../../../../components";

type Props = {
  advertisement: Advertisement;
};

const UpdateAdvertisement = ({ advertisement }: Props) => {
  const router = useRouter();
  const { show } = useSnackbarContext();
  const [files, setFiles] = useState<FileList | null>(null);
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<CreateAdvertisementDTO>({
    defaultValues: {
      href: advertisement.href,
      title: advertisement.title,
      page: advertisement.page,
    },
  });

  const onSubmit: SubmitHandler<CreateAdvertisementDTO> = async (data) => {
    try {
      let path;
      if (files) {
        const formData = new FormData();
        formData.append("image", files[0]);
        const { message, data: dataImage } = await uploadSingle(formData);
        if (message === MSG_SUCCESS) {
          path = dataImage.secure_url;
        }
      }

      const { message } = await updateAdvertisement(advertisement.id, {
        ...data,
        ...(path ? { path } : {}),
      });
      if (message === MSG_SUCCESS) {
        show("Cập nhật quảng cáo thành công", "success");
      }
    } catch (error) {
      console.log("UPDATE ADVERTISEMENT ERROR::", error);
    }
  };

  return (
    <AdminLayout pageTitle="Chỉnh sửa quảng cáo">
      <>
        <Head>
          <title>Chỉnh sửa quảng cáo</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <AdminFormPaper title="Thông tin quảng cáo">
          <form onSubmit={handleSubmit(onSubmit)}>
            <Grid container rowSpacing={3} columnSpacing={3}>
              <Grid item xs={12}>
                <InputControl
                  register={register("title", {
                    required: {
                      value: true,
                      message: "Tiêu đề không được để trống",
                    },
                  })}
                  error={errors.title}
                  label="Tiêu đề"
                  required={true}
                />
              </Grid>
              <Grid item xs={12}>
                <InputControl register={register("page")} label="Trang" />
              </Grid>
              <Grid item xs={12}>
                <InputControl register={register("href")} label="Liên kết" />
              </Grid>
              <Grid item xs={12}>
                <InputControl
                  label="Hình ảnh"
                  type="file"
                  onChange={(e: ChangeEvent<HTMLInputElement>) =>
                    setFiles(e.target.files)
                  }
                />
              </Grid>
              <Grid item xs={12}>
                <FooterForm onBack={() => router.back()} />
              </Grid>
            </Grid>
          </form>
        </AdminFormPaper>
      </>
    </AdminLayout>
  );
};

export async function getServerSideProps(context: any) {
  try {
    const { id } = context.query;
    const { message, data } = await getAdvertisementById(+id);
    if (message === MSG_SUCCESS) {
      return { props: { advertisement: data } };
    }
  } catch (error) {
    console.log("getServerSideProps - getAdvertisementById - error", error);
  }
  return { notFound: true };
}

export default UpdateAdvertisement;
