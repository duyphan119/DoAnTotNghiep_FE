import { GetServerSidePropsContext } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { useSelector } from "react-redux";
import { DataManagement, DataTable } from "../../../components";
import { AdminLayout } from "../../../layouts";
import { ResponseGetAllModel, UserModel } from "../../../models";
import { userActions, userSelector } from "../../../redux/slice/userSlice";
import { useAppDispatch } from "../../../redux/store";
import helper from "../../../utils/helpers";
import { ResponseItems, User } from "../../../utils/types";

type Props = {
  userData: ResponseItems<User>;
};
const LIMIT = 10;
const Page = (props: Props) => {
  const router = useRouter();
  const appDispatch = useAppDispatch();
  const { userData } = useSelector(userSelector);

  useEffect(() => {
    const { p, sortBy, sortType, limit } = router.query;
    appDispatch(
      userActions.fetchGetAll({
        p: +`${p}` || 1,
        limit: limit ? `${limit}` : LIMIT,
        sortBy: `${sortBy || "id"}`,
        sortType: `${sortType}` === "asc" ? "asc" : "desc",
      })
    );
  }, [router.query]);

  return (
    <AdminLayout pageTitle="Tài khoản">
      <>
        <Head>
          <title>Quản lý tài khoản</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <DataManagement
          paperTitle="Danh sách tài khoản"
          count={userData.count}
          limit={LIMIT}
        >
          <DataTable
            hasCheck={true}
            rows={userData.items}
            sortable={["id", "fullName", "email", "phone", "createdAt"]}
            columns={[
              {
                style: { width: 70, textAlign: "center" },
                display: "ID",
                key: "id",
              },
              {
                style: { textAlign: "left" },
                key: "email",
                display: "Email",
              },
              {
                style: { textAlign: "left" },
                key: "fullName",
                display: "Họ tên",
              },
              {
                style: { textAlign: "center", width: 120 },
                key: "phone",
                display: "Số điện thoại",
              },
              {
                style: { width: 120, textAlign: "center" },
                key: "createdAt",
                display: "Ngày tạo",
                render: (row: UserModel) =>
                  helper.formatDateTime(row.createdAt),
              },
            ]}
          />
        </DataManagement>
      </>
    </AdminLayout>
  );
};

export default Page;
